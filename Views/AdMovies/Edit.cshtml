

@model MovieViewModel

@{
    ViewData["Title"] = "Chỉnh sửa Phim";
}

<style>
    /* Custom styles for the form */
    body {
        background-color: #f4f7fa;
    }
    .form-container {
        background-color: #ffffff;
        border-radius: 10px;
        box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
        padding: 2.5rem;
        margin-top: 2rem;
        margin-bottom: 2rem;
    }
    .form-section-title {
        font-size: 1.25rem;
        font-weight: 600;
        color: #333;
        margin-bottom: 1.5rem;
        border-bottom: 2px solid #007bff;
        padding-bottom: 0.5rem;
    }
    .form-label {
        font-weight: 500;
        color: #444;
    }
    .form-control, .form-select {
        border-radius: 6px;
        border: 1px solid #ced4da;
        transition: border-color 0.2s ease-in-out, box-shadow 0.2s ease-in-out;
    }
    .form-control:focus, .form-select:focus {
        border-color: #007bff;
        box-shadow: 0 0 5px rgba(0, 123, 255, 0.3);
    }
    .btn-primary {
        background-color: #007bff;
        border-color: #007bff;
        border-radius: 6px;
        padding: 0.75rem 1.5rem;
        transition: background-color 0.2s ease-in-out;
    }
    .btn-primary:hover {
        background-color: #0056b3;
        border-color: #0056b3;
    }
    .btn-secondary {
        background-color: #6c757d;
        border-color: #6c757d;
        border-radius: 6px;
        padding: 0.75rem 1.5rem;
    }
    .btn-danger {
        border-radius: 6px;
    }
    .episode-card {
        border: 1px solid #e2e8f0;
        border-radius: 8px;
        background-color: #f8fafc;
        margin-bottom: 1rem;
        transition: transform 0.2s ease-in-out;
    }
    .episode-card:hover {
        transform: translateY(-3px);
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.05);
    }
    .alert {
        border-radius: 6px;
        margin-bottom: 1.5rem;
    }
    .current-media-preview {
        border: 1px solid #dee2e6;
        border-radius: 6px;
        padding: 0.5rem;
        background-color: #f8f9fa;
    }
    .current-media-preview img, .current-media-preview video {
        border-radius: 4px;
    }
    @@media (max-width: 768px) {
        .form-container {
            padding: 1.5rem;
        }
        .btn-primary, .btn-secondary {
            width: 100%;
            margin-bottom: 0.5rem;
        }
    }
</style>

<div class="container">
    <div class="form-container">
        <h2 class="mb-4 text-center">Chỉnh sửa Phim: @Model.Title</h2>

        @if (TempData["ErrorMessage"] != null)
        {
            <div class="alert alert-danger alert-dismissible fade show" role="alert">
                @TempData["ErrorMessage"]
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        }

        @if (TempData["SuccessMessage"] != null)
        {
            <div class="alert alert-success alert-dismissible fade show" role="alert">
                @TempData["SuccessMessage"]
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        }

        <form asp-action="Edit" asp-route-id="@Model.Id" method="post" enctype="multipart/form-data" class="needs-validation" novalidate>
            <div asp-validation-summary="ModelOnly" class="text-danger mb-4"></div>
            <input type="hidden" asp-for="Id" />

            <!-- Movie Information -->
            <div class="form-section-title">Thông tin phim</div>
            <div class="row g-3">
                <div class="col-md-6">
                    <label asp-for="Title" class="form-label">Tên phim</label>
                    <input asp-for="Title" class="form-control" required />
                    <span asp-validation-for="Title" class="text-danger"></span>
                </div>
                <div class="col-md-6">
                    <label asp-for="EnglishTitle" class="form-label">Tên tiếng Anh</label>
                    <input asp-for="EnglishTitle" class="form-control" />
                    <span asp-validation-for="EnglishTitle" class="text-danger"></span>
                </div>
                <div class="col-12">
                    <label asp-for="Description" class="form-label">Mô tả</label>
                    <textarea asp-for="Description" class="form-control" rows="5" required></textarea>
                    <span asp-validation-for="Description" class="text-danger"></span>
                </div>
                <div class="col-md-4">
                    <label asp-for="ReleaseYear" class="form-label">Năm phát hành</label>
                    <input asp-for="ReleaseYear" type="number" class="form-control" min="1900" max="@DateTime.Now.Year" required />
                    <span asp-validation-for="ReleaseYear" class="text-danger"></span>
                </div>
                <div class="col-md-4">
                    <label asp-for="CountryId" class="form-label">Quốc gia</label>
                    <select asp-for="CountryId" class="form-select" required>
                        <option value="">Chọn quốc gia</option>
                        @foreach (var country in Model.Countries)
                        {
                            <option value="@country.Id" selected="@(country.Id == Model.CountryId)">@country.Name</option>
                        }
                    </select>
                    <span asp-validation-for="CountryId" class="text-danger"></span>
                </div>
                <div class="col-md-4">
                    <label asp-for="SelectedGenreIds" class="form-label">Thể loại</label>
                    <select asp-for="SelectedGenreIds" class="form-select" multiple required>
                        @foreach (var genre in Model.Genres)
                        {
                            <option value="@genre.Id" selected="@Model.SelectedGenreIds.Contains(genre.Id)">@genre.Name</option>
                        }
                    </select>
                    <span asp-validation-for="SelectedGenreIds" class="text-danger"></span>
                    <small class="form-text text-muted">Giữ Ctrl (Windows) hoặc Cmd (Mac) để chọn nhiều thể loại.</small>
                </div>
                <div class="col-md-6">
                    <label asp-for="Director" class="form-label">Đạo diễn</label>
                    <input asp-for="Director" class="form-control" required />
                    <span asp-validation-for="Director" class="text-danger"></span>
                </div>
                <div class="col-md-6">
                    <label asp-for="Cast" class="form-label">Diễn viên</label>
                    <input asp-for="Cast" class="form-control" required />
                    <span asp-validation-for="Cast" class="text-danger"></span>
                </div>
                <div class="col-md-6">
                    <label asp-for="TotalEpisodes" class="form-label">Tổng số tập</label>
                    <input asp-for="TotalEpisodes" type="number" class="form-control" min="1" required />
                    <span asp-validation-for="TotalEpisodes" class="text-danger"></span>
                </div>
                <div class="col-md-6">
                    <div class="form-check mt-4">
                        <input asp-for="IsCompleted" class="form-check-input" type="checkbox" />
                        <label asp-for="IsCompleted" class="form-check-label">Đã hoàn thành</label>
                        <span asp-validation-for="IsCompleted" class="text-danger"></span>
                    </div>
                </div>
            </div>

            <!-- Media Uploads -->
            <div class="form-section-title mt-5">Tải lên media</div>
            <div class="row g-3">
                <div class="col-12">
                    <label asp-for="PosterFile" class="form-label">Poster mới (JPEG, PNG, JPG, GIF, tối đa 5MB)</label>
                    <input asp-for="PosterFile" type="file" class="form-control" accept="image/jpeg,image/png,image/jpg,image/gif" />
                    <span asp-validation-for="PosterFile" class="text-danger"></span>
                    @if (!string.IsNullOrEmpty(Model.PosterPath))
                    {
                        <div class="current-media-preview mt-3">
                            <label class="form-label">Poster hiện tại:</label>
                            <img src="@Url.Content("~/" + Model.PosterPath)" alt="Poster hiện tại" class="img-fluid mb-2" style="max-width: 200px; max-height: 200px;" />
                            <a href="@Url.Content("~/" + Model.PosterPath)" target="_blank" class="btn btn-sm btn-outline-primary">Xem chi tiết</a>
                        </div>
                    }
                </div>
                <div class="col-12">
                    <label asp-for="TrailerFile" class="form-label">Trailer mới (MP4, MOV, AVI, tối đa 100MB)</label>
                    <input asp-for="TrailerFile" type="file" class="form-control" accept="video/mp4,video/quicktime,video/x-msvideo" />
                    <span asp-validation-for="TrailerFile" class="text-danger"></span>
                    @if (!string.IsNullOrEmpty(Model.TrailerPath))
                    {
                        <div class="current-media-preview mt-3">
                            <label class="form-label">Trailer hiện tại:</label>
                            <video controls class="d-block mb-2" style="max-width: 300px;">
                                <source src="@Url.Content("~/" + Model.TrailerPath)" type="video/mp4">
                                Trình duyệt của bạn không hỗ trợ thẻ video.
                            </video>
                            <a href="@Url.Content("~/" + Model.TrailerPath)" target="_blank" class="btn btn-sm btn-outline-primary">Tải xuống hoặc Xem</a>
                        </div>
                    }
                </div>
            </div>

            <!-- Existing Episodes -->
            <div class="form-section-title mt-5">Các tập phim hiện có</div>
            <div id="existing-episodes-container">
                @if (Model.ExistingEpisodes != null && Model.ExistingEpisodes.Any())
                {
                    @for (int i = 0; i < Model.ExistingEpisodes.Count; i++)
                    {
                        <div class="episode-card">
                            <div class="card-body">
                                <h5 class="card-title">Tập @(i + 1)</h5>
                                <input type="hidden" asp-for="ExistingEpisodes[i].Id" />
                                <input type="hidden" asp-for="ExistingEpisodes[i].MovieId" />
                                <input type="hidden" asp-for="ExistingEpisodes[i].VideoPath" />
                                <div class="row g-3">
                                    <div class="col-md-6">
                                        <label asp-for="ExistingEpisodes[i].EpisodeNumber" class="form-label">Số tập</label>
                                        <input asp-for="ExistingEpisodes[i].EpisodeNumber" type="number" class="form-control" min="1" required />
                                        <span asp-validation-for="ExistingEpisodes[i].EpisodeNumber" class="text-danger"></span>
                                    </div>
                                    <div class="col-md-6">
                                        <label asp-for="ExistingEpisodes[i].Title" class="form-label">Tên tập</label>
                                        <input asp-for="ExistingEpisodes[i].Title" type="text" class="form-control" required />
                                        <span asp-validation-for="ExistingEpisodes[i].Title" class="text-danger"></span>
                                    </div>
                                    <div class="col-12">
                                        <label asp-for="ExistingEpisodes[i].Description" class="form-label">Mô tả</label>
                                        <textarea asp-for="ExistingEpisodes[i].Description" class="form-control" rows="3"></textarea>
                                        <span asp-validation-for="ExistingEpisodes[i].Description" class="text-danger"></span>
                                    </div>
                                    <div class="col-md-6">
                                        <label asp-for="ExistingEpisodes[i].Duration" class="form-label">Thời lượng (phút)</label>
                                        <input asp-for="ExistingEpisodes[i].Duration" type="number" class="form-control" min="1" max="600" />
                                        <span asp-validation-for="ExistingEpisodes[i].Duration" class="text-danger"></span>
                                    </div>
                                    <div class="col-md-6">
                                        <label asp-for="ExistingEpisodes[i].ReleaseDate" class="form-label">Ngày phát hành</label>
                                        <input asp-for="ExistingEpisodes[i].ReleaseDate" type="date" class="form-control" />
                                        <span asp-validation-for="ExistingEpisodes[i].ReleaseDate" class="text-danger"></span>
                                    </div>
                                    <div class="col-12">
                                        <label asp-for="ExistingEpisodes[i].VideoFile" class="form-label">Video tập mới (MP4, MOV, AVI, tối đa 100MB)</label>
                                        <input asp-for="ExistingEpisodes[i].VideoFile" type="file" class="form-control" accept="video/mp4,video/quicktime,video/x-msvideo" />
                                        <span asp-validation-for="ExistingEpisodes[i].VideoFile" class="text-danger"></span>
                                        @if (!string.IsNullOrEmpty(Model.ExistingEpisodes[i].VideoPath))
                                        {
                                            <div class="current-media-preview mt-3">
                                                <label class="form-label">Video tập hiện tại:</label>
                                                <video controls class="d-block mb-2" style="max-width: 200px;">
                                                    <source src="@Url.Content("~/" + Model.ExistingEpisodes[i].VideoPath)" type="video/mp4">
                                                    Trình duyệt của bạn không hỗ trợ thẻ video.
                                                </video>
                                                <a href="@Url.Content("~/" + Model.ExistingEpisodes[i].VideoPath)" target="_blank" class="btn btn-sm btn-outline-primary">Xem/Tải về</a>
                                            </div>
                                        }
                                    </div>
                                    <div class="col-12">
                                        <button type="button" class="btn btn-danger btn-sm remove-episode-existing">Xóa tập</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                }
                else
                {
                    <p class="text-muted">Bộ phim này chưa có tập phim nào.</p>
                }
            </div>

            <!-- New Episodes -->
            <div class="form-section-title mt-5">Thêm tập phim mới</div>
            <button type="button" class="btn btn-secondary mb-3" id="add-new-episode-field">
                <i class="bi bi-plus-circle"></i> Thêm tập phim
            </button>
            <div id="new-episodes-container"></div>

            <!-- Form Actions -->
            <div class="mt-5 d-flex justify-content-end gap-2">
                <button type="submit" class="btn btn-primary">Lưu Thay Đổi</button>
                <a asp-action="Index" class="btn btn-secondary">Hủy</a>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        // Bootstrap form validation
        (function () {
            'use strict';
            var forms = document.querySelectorAll('.needs-validation');
            Array.prototype.slice.call(forms).forEach(function (form) {
                form.addEventListener('submit', function (event) {
                    if (!form.checkValidity()) {
                        event.preventDefault();
                        event.stopPropagation();
                    }
                    form.classList.add('was-validated');
                }, false);
            });
        })();

        // Reindex episode fields
        function reindexEpisodeFields() {
            const episodeItems = document.querySelectorAll('.episode-card');
            episodeItems.forEach((episode, index) => {
                episode.querySelector('.card-title').textContent = `Tập ${index + 1}`;
                const inputs = episode.querySelectorAll('input[name^="ExistingEpisodes"], textarea[name^="ExistingEpisodes"]');
                inputs.forEach(input => {
                    input.name = input.name.replace(/\[\d+\]/, `[${index}]`);
                    if (input.id) {
                        input.id = input.id.replace(/__\d+__/g, `__${index}__`);
                    }
                });
            });
        }

        // Reindex new episode fields
        function reindexNewEpisodeFields() {
            const newEpisodeItems = document.querySelectorAll('.new-episode-item');
            newEpisodeItems.forEach((episode, index) => {
                episode.querySelector('.card-title').textContent = `Tập mới ${index + 1}`;
                const inputs = episode.querySelectorAll('input[name^="NewEpisodesToAdd"], textarea[name^="NewEpisodesToAdd"]');
                inputs.forEach(input => {
                    input.name = input.name.replace(/\[\d+\]/, `[${index}]`);
                    if (input.id) {
                        input.id = input.id.replace(/__\d+__/g, `__${index}__`);
                    }
                });
            });
        }

        // Remove existing episode
        document.addEventListener('click', function (e) {
            if (e.target.classList.contains('remove-episode-existing')) {
                e.target.closest('.episode-card').remove();
                reindexEpisodeFields();
            }
        });

        // Remove new episode
        document.addEventListener('click', function (e) {
            if (e.target.classList.contains('remove-new-episode')) {
                e.target.closest('.new-episode-item').remove();
                reindexNewEpisodeFields();
            }
        });

        // Add new episode
        document.getElementById('add-new-episode-field').addEventListener('click', function () {
            const container = document.getElementById('new-episodes-container');
            const index = container.children.length;
            const episodeHtml = `
                <div class="episode-card new-episode-item">
                    <div class="card-body">
                        <h5 class="card-title">Tập mới ${index + 1}</h5>
                        <input type="hidden" name="NewEpisodesToAdd[${index}].MovieId" value="${'@Model.Id'}" />
                        <div class="row g-3">
                            <div class="col-md-6">
                                <label class="form-label" for="NewEpisodesToAdd_${index}__EpisodeNumber">Số tập</label>
                                <input type="number" class="form-control" name="NewEpisodesToAdd[${index}].EpisodeNumber" min="1" required />
                                <span class="text-danger field-validation-valid" data-valmsg-for="NewEpisodesToAdd[${index}].EpisodeNumber" data-valmsg-replace="true"></span>
                            </div>
                            <div class="col-md-6">
                                <label class="form-label" for="NewEpisodesToAdd_${index}__Title">Tên tập</label>
                                <input type="text" class="form-control" name="NewEpisodesToAdd[${index}].Title" required />
                                <span class="text-danger field-validation-valid" data-valmsg-for="NewEpisodesToAdd[${index}].Title" data-valmsg-replace="true"></span>
                            </div>
                            <div class="col-12">
                                <label class="form-label" for="NewEpisodesToAdd_${index}__Description">Mô tả</label>
                                <textarea class="form-control" name="NewEpisodesToAdd[${index}].Description" rows="3"></textarea>
                                <span class="text-danger field-validation-valid" data-valmsg-for="NewEpisodesToAdd[${index}].Description" data-valmsg-replace="true"></span>
                            </div>
                            <div class="col-md-6">
                                <label class="form-label" for="NewEpisodesToAdd_${index}__Duration">Thời lượng (phút)</label>
                                <input type="number" class="form-control" name="NewEpisodesToAdd[${index}].Duration" min="1" max="600" />
                                <span class="text-danger field-validation-valid" data-valmsg-for="NewEpisodesToAdd[${index}].Duration" data-valmsg-replace="true"></span>
                            </div>
                            <div class="col-md-6">
                                <label class="form-label" for="NewEpisodesToAdd_${index}__ReleaseDate">Ngày phát hành</label>
                                <input type="date" class="form-control" name="NewEpisodesToAdd[${index}].ReleaseDate" />
                                <span class="text-danger field-validation-valid" data-valmsg-for="NewEpisodesToAdd[${index}].ReleaseDate" data-valmsg-replace="true"></span>
                            </div>
                            <div class="col-12">
                                <label class="form-label" for="NewEpisodesToAdd_${index}__VideoFile">Video tập (MP4, MOV, AVI, tối đa 100MB)</label>
                                <input type="file" class="form-control" name="NewEpisodesToAdd[${index}].VideoFile" accept="video/mp4,video/quicktime,video/x-msvideo" required />
                                <span class="text-danger field-validation-valid" data-valmsg-for="NewEpisodesToAdd[${index}].VideoFile" data-valmsg-replace="true"></span>
                            </div>
                            <div class="col-12">
                                <button type="button" class="btn btn-danger btn-sm remove-new-episode">Xóa tập này</button>
                            </div>
                        </div>
                    </div>
                </div>
            `;
            container.insertAdjacentHTML('beforeend', episodeHtml);
        });

        // Validate episodes
        document.querySelector('form').addEventListener('submit', function (e) {
            const totalEpisodesDeclared = parseInt(document.querySelector('#TotalEpisodes').value, 10);
            const existingEpisodeItems = document.querySelectorAll('.episode-card:not(.new-episode-item)');
            const newEpisodeItems = document.querySelectorAll('.new-episode-item');
            let totalEpisodesInForm = existingEpisodeItems.length + newEpisodeItems.length;

            if (totalEpisodesInForm > totalEpisodesDeclared) {
                e.preventDefault();
                alert(`Số lượng tập phim trong form (${totalEpisodesInForm}) vượt quá tổng số tập đã khai báo (${totalEpisodesDeclared}).`);
                return;
            }

            let episodeNumbers = new Set();
            let duplicatesFound = false;

            existingEpisodeItems.forEach((episode, index) => {
                const episodeNumberInput = episode.querySelector(`input[name="ExistingEpisodes[${index}].EpisodeNumber"]`);
                if (episodeNumberInput) {
                    const epNum = parseInt(episodeNumberInput.value);
                    if (episodeNumbers.has(epNum)) {
                        alert(`Số tập phim bị trùng: Tập ${epNum} xuất hiện nhiều hơn một lần trong danh sách tập hiện có.`);
                        duplicatesFound = true;
                    } else if (epNum > 0) {
                        episodeNumbers.add(epNum);
                    }
                }
            });

            if (duplicatesFound) {
                e.preventDefault();
                return;
            }

            newEpisodeItems.forEach((episode, index) => {
                const episodeNumberInput = episode.querySelector(`input[name="NewEpisodesToAdd[${index}].EpisodeNumber"]`);
                if (episodeNumberInput) {
                    const epNum = parseInt(episodeNumberInput.value);
                    if (episodeNumbers.has(epNum)) {
                        alert(`Số tập phim bị trùng: Tập ${epNum} (tập mới) đã tồn tại.`);
                        duplicatesFound = true;
                    } else if (epNum > 0) {
                        episodeNumbers.add(epNum);
                    }
                }
            });

            if (duplicatesFound) {
                e.preventDefault();
                return;
            }

            newEpisodeItems.forEach((episode, index) => {
                const videoInput = episode.querySelector(`input[name="NewEpisodesToAdd[${index}].VideoFile"]`);
                const titleInput = episode.querySelector(`input[name="NewEpisodesToAdd[${index}].Title"]`);
                const episodeNumberInput = episode.querySelector(`input[name="NewEpisodesToAdd[${index}].EpisodeNumber"]`);
                if (videoInput.files.length > 0) {
                    if (!titleInput.value.trim()) {
                        e.preventDefault();
                        alert(`Vui lòng nhập tên cho tập phim mới ${index + 1}.`);
                    }
                    if (!episodeNumberInput || parseInt(episodeNumberInput.value) < 1) {
                        e.preventDefault();
                        alert(`Vui lòng nhập số tập hợp lệ cho tập phim mới ${index + 1}.`);
                    }
                }
            });
        });
    </script>
}
